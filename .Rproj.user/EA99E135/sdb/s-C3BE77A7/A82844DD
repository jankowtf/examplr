{
    "contents" : "#' @title\n#' Run Examples\n#'\n#' @description\n#' Run examples in \\code{inst/examples}.\n#'  \n#' @details \n#' Note that you should apply this method \\emph{after} a fresh initialization\n#' of your \\package{rapp} project as this will ensure that dummy example files\n#' are created for all of your functions/methods.\n#' \n#' @template general-remarks\n#' \n#' @param path \\strong{Signature argument}.\n#'   \tObject containing directory path information \n#'   \t(directory that contains the example script files).   \n#' @param dontrun \\code{\\link{logical}}. Dimension: 1.\n#' \t\t\\code{TRUE} means dont-run examples are included, \n#' \t\t\\code{FALSE} (default) means only non-dont-run examples are considered.\n#' @template threedot\n#' @template context-and-namespace\n#' @example inst/examples/runExamples.R\n#' @template author\n#' @template references\n#' @export\nsetGeneric(\n  name = \"runExamples\",\n  signature = c(\n    \"path\", \n    \".ctx\", \n    \".ns\"\n  ),\n  def = function(\n    path,\n    dontrun = FALSE,\n    ...,\n    .ctx,\n    .ns\n  ) {\n    standardGeneric(\"runExamples\")       \n  }\n)\n\n#' @title\n#' Run Examples (\\code{character-missing-missing})\n#' \n#' @template general-remarks\n#'\n#' @inheritParams runExamples \n#' @param path \\code{character}. Dimension: 1. \n#'    Directory path.\n#' @param .ctx \\code{\\link{missing}}. \n#'    Default context.\n#' @param .ns \\code{\\link{missing}}. \n#'    Default namesapce.\n#' @return See method:\n#'   \t\\code{\\link[rapp.core.examples]{runExamples-character-RappCoreExamplesS3-RappCoreExamplesS3}}\n#' @example inst/examples/runExamples.R\n#' @template author\n#' @template references\n#' @export\nsetMethod(\n  f = \"runExamples\", \n  signature=signature(\n    path = \"character\",\n    .ctx = \"missing\",\n    .ns = \"missing\"\n  ), \n  definition = cmpfun(function(\n    path,\n    dontrun,\n    ...,\n    .ctx,\n    .ns\n  ) {\n    \n  return(\n    runExamples(\n      path = path,\n      dontrun = dontrun,\n      ...,\n      .ctx = structure(NA, class = \"RappCoreExamplesS3\"),\n      .ns = structure(NA, class = \"RappCoreExamplesS3\")\n    )\n  )\n\n  }, options=list(suppressAll=TRUE))\n)\n\n#' @title\n#' Run Examples (\\code{character-RappCoreExamplesS3-RappCoreExamplesS3})\n#' \n#' @template general-remarks\n#'\n#' @inheritParams runExamples \n#' @param path \\code{character}. Dimension: 1. \n#'    Directory path.\n#' @param .ctx \\code{\\link{RappCoreExamplesS3}}. \n#' @param .ns \\code{\\link{RappCoreExamplesS3}}. \n#' @return See method:\n#' \t\t\\code{\\link[rapp.core.examples]{runExamples-character-RappCoreExamplesS3-RappCoreExamplesS3}}\n#' @example inst/examples/runExamples.R\n#' @template author\n#' @template references\n#' @export\nsetMethod(\n  f = \"runExamples\", \n  signature=signature(\n    path = \"character\",\n    .ctx = \"RappCoreExamplesS3\",\n    .ns = \"RappCoreExamplesS3\"\n  ), \n  definition = cmpfun(function(\n    path,\n    dontrun,\n    ...,\n    .ctx,\n    .ns\n  ) {\n    \n#   ## Tracing //\n#   if (length(as.numeric(getOption(\"rapp\")$trace))) {\n#     \n#   }        \n  \n  ## Dont-Run pattern //\n  pattern.dont <- \"^\\\\\\\\dontrun{$\"\n  \n  ## Get files //\n  files <- getExistingExamples(path = path, return_path = TRUE)\n  \n  if (!length(files)) {\n    out <- logical()\n  } else {\n    if (!dontrun) {\n      idx \t<- isDontRunExample(path = path)\n      files <- files[!idx]\n    }\n    if (!length(files)) {\n      out <- logical()\n    } else {\n      ## Run //\n      out <- sapply(files, function(ii) {\n        cnt <- readLines(ii)\n        idx <- grep(pattern.dont, cnt, perl = TRUE)\n        if (length(idx)) {\n          cnt <- cnt[c(-idx, -length(cnt))]\n        }\n        cnt <- paste(cnt, collapse=\"\")\n        expr <- parse(text=cnt)\n        out <- tryCatch(\n          {\n            eval(expr)\n            TRUE\n          },\n          warning=function(cond) {\n            warning(conditionMessage(cond))\n            invokeRestart(\"muffleWarning\")\n          },\n          error=function(cond) {\n            message(conditionMessage(cond)) \n            FALSE\n          }\n        )\n      })\n    }\n  }\n  return(out)\n\n  }, options=list(suppressAll=TRUE))\n)\n",
    "created" : 1409260464871.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1474073258",
    "id" : "A82844DD",
    "lastKnownWriteTime" : 1409261384,
    "path" : "Q:/home/wsp/rapp2/rapp.core.examples/R/runExamples.R",
    "project_path" : "R/runExamples.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}